---
import Card from "../components/Card.astro";
import SideLayout from "../layout/SideLayout.astro";
import { db, storage } from "../lib/appwrite";

// Initialize Appwrite Database
const databaseId = import.meta.env.PUBLIC_ASTRO_APPWRITE_DATABASE_ID; // Replace with your database ID
const collectionId = import.meta.env.PUBLIC_ASTRO_APPWRITE_COLLECTION_ID; // Replace with your notes collection ID
const storageID = import.meta.env.PUBLIC_ASTRO_APPWRITE_STORAGE_BUCKET;
let notes: any[] = [];
let results: any = [];
// Function to fetch notes and render them in the container
async function fetchNotes() {
    try {
        const response = await db.listDocuments(databaseId, collectionId);
        notes = response.documents;
    } catch (error:any) {
        console.error("Error fetching notes:", error.message);
    }
}
fetchNotes();
// Handle POST for deletion
if (Astro.request.method === "POST") {
    try {
        const data = await Astro.request.formData();
        const noteId = data.get("noteId") as string;

        if (noteId) {
            // Retrieve the document to get the image ID
            const note = results.find((n: any) => n.$id === noteId);
            const imageUrl = note?.imageUrl;

            // Delete the file from storage if the image exists
            if (imageUrl) {
                await storage.deleteFile(storageID, imageUrl); // Use the image ID
            }

            // Delete the note by its ID
            await db.deleteDocument(
                databaseId, // Database ID
                collectionId, // Collection ID
                noteId, // Document ID to be deleted
            );

            // Redirect to the same page to refresh the list
            return Astro.redirect("/");
        }
    } catch (error) {
        console.error("Failed to delete note or image", error);
    }
}
---

<SideLayout>
    <!-- Display each note -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
        {
            notes.map((note) => (
                <Card
                    id={note.id}
                    imageUrl={note.imageUrl}
                    title={note.title}
                    content={note.content}
                />
            ))
        }
    </div>
</SideLayout>
