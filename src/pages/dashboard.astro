---
// Import necessary components and modules
import Card from "../components/Card.astro";
import SideLayout from "../layout/SideLayout.astro";
import {
    db,
    storage,
    databaseId,
    collectionId,
    storageID,
} from "../lib/appwrite";

let notes:any =[]

// Fetch notes
try {
    const response = await db.listDocuments(databaseId, collectionId);
    notes = response.documents;
} catch (error:any) {
    console.error("Error fetching notes:", error.message);
}

// Handle POST request for deletion
if (Astro.request.method === "POST") {
    try {
        const data = await Astro.request.formData();
        const noteId = data.get("noteId") as string;

        // Ensure noteId exists
        if (!noteId) {
            throw new Error("Invalid or missing Note ID.");
        }

        // Fetch the note to get the image ID (if exists)
        const note = await db.getDocument(databaseId, collectionId, noteId);
        const imageId = note.imageId || null; // Assuming imageId is stored in the document

        // If the note has an imageId, delete the image from storage
        if (imageId) {
            try {
                await storage.deleteFile(storageID, imageId);
            } catch (error:any) {
                console.error("Failed to delete associated image:", error.message);
            }
        }

        // Delete the note itself
        await db.deleteDocument(databaseId, collectionId, noteId);

        // Redirect to refresh the list
        return Astro.redirect("/dashboard");

    } catch (error:any) {
        console.error("Failed to delete note or associated image:", error.message);
        return new Response("Failed to delete note or associated image", { status: 500 });
    }
}
---

<SideLayout>
    <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
        {
            notes.map((note:any) => (
                <form method="POST" class="relative">
                    <Card
                        id={note.$id}
                        imageUrl={note.imageUrl}
                        title={note.title}
                        content={note.content}
                    />
                    <!-- Delete Button -->
                    <button
                        type="submit"
                        name="noteId"
                        value={note.$id}
                        class="absolute top-2 right-2 bg-red-500 text-white rounded px-2 py-1"
                    >
                        Delete
                    </button>
                </form>
            ))
        }
    </div>
</SideLayout>
